import{C as b}from"./format-CGxH6fZv.js";import{C}from"./transactionStore-C-kjVIk3.js";import{d as k,h as S,c as E,w as $,a as B,b as w,k as y,l as _,u as P,e as g,D as I,E as A}from"./index-CL5__TWX.js";const V={class:"flex items-center justify-between px-4 py-2 relative"},j={class:"text-2xl text-gray-600 hover:text-black"},D={class:"mx-auto text-center font-medium pointer-events-none"},N=["name","value"],R={class:"text-2xl text-gray-600 hover:text-black"},z=k({__name:"SelectedOptionSlide",props:{data:{},formName:{},initialIndex:{},modelValue:{}},emits:["update:selected","update:modelValue"],setup(d,{emit:u}){const a=d,h=u,m=S(a.initialIndex??0),v=E(()=>!a.data||a.data.length===0?"":a.data[m.value]),p=()=>{!a.data||a.data.length===0||(m.value=(m.value-1+a.data.length)%a.data.length)},x=()=>{!a.data||a.data.length===0||(m.value=(m.value+1)%a.data.length)};return $(m,()=>{a.data&&a.data.length>0&&(h("update:selected",a.data[m.value]),h("update:modelValue",a.data[m.value]))},{immediate:!0}),(q,t)=>(g(),B("div",V,[w("div",{class:"absolute left-0 top-0 h-full w-1/3 flex items-center justify-start px-4 cursor-pointer",onClick:p},[w("span",j,[(g(),y(_(P(b))))])]),w("div",D,[w("input",{class:"bg-transparent text-center font-medium pointer-events-none",type:"text",name:d.formName,value:v.value,readonly:""},null,8,N)]),w("div",{class:"absolute right-0 top-0 h-full w-1/3 flex items-center justify-end px-4 cursor-pointer",onClick:x},[w("span",R,[(g(),y(_(P(C))))])])]))}}),F=I("categories",()=>{const d=A(),u=S([]);return{categories:u,fetchAll:async()=>{const r=(await d.getStore("categories","readonly")).getAll();return new Promise(async(s,o)=>{r.onsuccess=async()=>{const e=r.result;u.value=e,s(u.value)},r.onerror=()=>o(r.error)})},getById:async t=>{const r=await d.getStore("categories","readonly");return new Promise((s,o)=>{const e=r.get(t);e.onsuccess=()=>{const l=e.result??null;s(l)},e.onerror=()=>o(e.error)})},add:async t=>{try{const r=await d.getStore("categories","readwrite");return await new Promise((s,o)=>{const e=r.add(t);e.onsuccess=()=>s(),e.onerror=()=>o(e.error)}),u.value.push(t),{success:!0}}catch(r){return console.error("Add failed:",r),{success:!1,error:r}}},update:async(t,r)=>{try{const s=await d.getStore("categories","readwrite"),e={...await new Promise((c,i)=>{const n=s.get(t);n.onsuccess=()=>c(n.result),n.onerror=()=>i(n.error)}),...r};await new Promise((c,i)=>{const n=s.put(e);n.onsuccess=()=>c(),n.onerror=()=>i(n.error)});const l=u.value.findIndex(c=>c.id===t);return l!==-1&&(u.value[l]=e),{success:!0}}catch(s){return console.error("Update failed:",s),{success:!1,error:s}}},updateItem:async(t,r,s)=>{try{const o=await d.getStore("categories","readwrite"),e=await new Promise((i,n)=>{const f=o.get(t);f.onsuccess=()=>i(f.result),f.onerror=()=>n(f.error)});if(!e)throw new Error(`Parent with id ${t} not found`);if(!e.items)throw new Error(`Parent ${t} has no items`);const l=e.items.findIndex(i=>i.id===r);if(l===-1)throw new Error(`Item with id ${r} not found in parent ${t}`);e.items[l]={...e.items[l],...s},await new Promise((i,n)=>{const f=o.put(e);f.onsuccess=()=>i(),f.onerror=()=>n(f.error)});const c=u.value.findIndex(i=>i.id===t);return c!==-1&&(u.value[c]=e),{success:!0,data:e.items[l]}}catch(o){return console.error("Update item failed:",o),{success:!1,error:o}}},remove:async t=>{try{const r=await d.getStore("categories","readwrite");return await new Promise((s,o)=>{const e=r.delete(t);e.onsuccess=()=>s(),e.onerror=()=>o(e.error)}),u.value=u.value.filter(s=>s.id!==t),{success:!0}}catch(r){return console.error("Remove failed:",r),{success:!1,error:r}}},removeItem:async(t,r)=>{try{const s=await d.getStore("categories","readwrite"),o=await new Promise((c,i)=>{const n=s.get(t);n.onsuccess=()=>c(n.result),n.onerror=()=>i(n.error)});if(!o)throw new Error(`Parent with id ${t} not found`);if(!o.items)throw new Error(`Parent ${t} has no items`);const e=o.items.length;if(o.items=o.items.filter(c=>c.id!==r),o.items.length===e)throw new Error(`Item with id ${r} not found in parent ${t}`);await new Promise((c,i)=>{const n=s.put(o);n.onsuccess=()=>c(),n.onerror=()=>i(n.error)});const l=u.value.findIndex(c=>c.id===t);return l!==-1&&(u.value[l]=o),{success:!0}}catch(s){return console.error("Remove item failed:",s),{success:!1,error:s}}}}});export{z as _,F as u};
